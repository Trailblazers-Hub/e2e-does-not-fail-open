
testing...

{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "javascript/ServerLeak",
              "name": "ServerLeak",
              "shortDescription": {
                "text": "Information Exposure"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nSensitive data includes: personally identifiable information (PII) of employees, customers, users, or other third parties; financial information; code; intellectual property; or protected network information such as passwords. Exposure of sensitive information to an unauthorized actor occurs when any party who does not require this information for business purposes can remove this information from the secure network.\nConsequences of exposure can include holding it for ransom payment, identity theft, or access to other internal network resources-along with financial loss due to regulatory fines, court settlements, or cost to restore compromised systems. As most attackers aim to extract sensitive information, this CWE only describes exploits that take advantage of vulnerabilities related to how data is handled: the management, storage, transfer, or removal of sensitive information.\n\n### Best practices for prevention\n* Encrypt data at all times, whether in transit or at rest.\n* When transporting data, always use a secure protocol such as TLS.\n* Before collecting PII or financial information, consider whether there is a true business need for this information; similarly, before storing the data, ensure that there is an ongoing business need.\n* Classify all incoming data according to privacy and security guidelines to improve awareness of sensitive data.\n* Ensure that caching is disabled for all transactions involving sensitive information.\n* Store passwords with secure, salted hashing functions.\n* Apply a network-wide least-privilege policy so sensitive data is provided only to users with business need to know.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "maintenance",
                  "error",
                  "response",
                  "route"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/tilemill-project/tilemill/commit/3a3f50dc337f9d850dbfc577fa9f82ddbbf1b312?diff=split#diff-507d86dfeab3832630c422db0152b686L24",
                    "lines": [
                      {
                        "line": "require('export')(app, settings);",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.error(function(err, req, res){",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "    err.message && (err = err.message);",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "    res.send(err, 500);",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "});",
                        "lineNumber": 26,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Tetsuya3850/React-Express-Examples/commit/4f4c15ad309ce0de4d750469276f5bbd2ee07183?diff=split#diff-e161513502ac6651f1c09e9a417b03fdL53",
                    "lines": [
                      {
                        "line": "app.use((err, req, res, next) => {",
                        "lineNumber": 81,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.send(err);",
                        "lineNumber": 53,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  res.json(err);",
                        "lineNumber": 82,
                        "lineChange": "added"
                      },
                      {
                        "line": "});",
                        "lineNumber": 83,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/frosas/google-plus-user-feed/commit/fcb26d53c1b03b863146d7cdb6125bca20440956?diff=split#diff-0364f57fbff2fabbe941ed20c328ef1aL9",
                    "lines": [
                      {
                        "line": "var app = express.createServer()",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "var sendError = function(response, error) {",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "    response.send(error)",
                        "lineNumber": 9,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    response.send(error.message)",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 10,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Some cleanup / error handling",
                  "fix error response",
                  "(errors) routes - Add arsenal errors"
                ],
                "precision": "very-high",
                "repoDatasetSize": 479,
                "cwe": [
                  "CWE-200"
                ]
              }
            },
            {
              "id": "javascript/UseCsurfForExpress",
              "name": "UseCsurfForExpress",
              "shortDescription": {
                "text": "Cross-Site Request Forgery (CSRF)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nCross-site request forgery is an attack in which a malicious third party takes advantage of a user's authenticated credentials (such as a browser cookie) to impersonate that trusted user and perform unauthorized actions. The web application server cannot tell the difference between legitimate and malicious requests. This type of attack generally begins by tricking the user with a social engineering attack, such as a link or popup that the user inadvertently clicks, causing an unauthorized request to be sent to the web server. Consequences vary: At a standard user level, attackers can change passwords, transfer funds, make purchases, or connect with contacts; from an administrator account, attackers can then make changes to or even take down the app itself.\n\n### Best practices for prevention\n* Use development frameworks that defend against CSRF, using a nonce, hash, or some other security device to the URL and/or to forms.\n* Implement secure, unique, hidden tokens that are checked by the server each time to validate state-change requests.\n* Never assume that authentication tokens and session identifiers mean a request is legitimate.\n* Understand and implement other safe-cookie techniques, such as double submit cookies.\n* Terminate user sessions when not in use, including automatic timeout.\n* Ensure rigorous coding practices and defenses against other commonly exploited CWEs, since cross-site scripting (XSS), for example, can be used to bypass defenses against CSRF.\n\n## References\n\n* [Express Documentation - Implement CSRF Protection](https://expressjs.com/en/resources/middleware/csurf.html)\n* [Node Security Checklist - CSRF](https://blog.risingstack.com/node-js-security-checklist/#csrf)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "maintenance",
                  "express",
                  "server",
                  "CSRF"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/eclipse/orion.client/commit/ad8f3bce33a1ea9d1e2144e6c42f075ad25829d6?diff=split#diff-16594450dc1f06f7d9cf4a47859cfa52L175",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 172,
                        "lineChange": "none"
                      },
                      {
                        "line": "return express()",
                        "lineNumber": 174,
                        "lineChange": "removed"
                      },
                      {
                        "line": "return express.Router()",
                        "lineNumber": 174,
                        "lineChange": "added"
                      },
                      {
                        "line": ".use(bodyParser.json())",
                        "lineNumber": 175,
                        "lineChange": "none"
                      },
                      {
                        "line": ".use(resource(workspaceRoot, {",
                        "lineNumber": 176,
                        "lineChange": "removed"
                      },
                      {
                        "line": ".use(apiPath(root))",
                        "lineNumber": 176,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/flowgrammable/flowsim/commit/1681245625230c6d71e1e74b0ada6551cbf2d935?diff=split#diff-4cb60403ef79ea471c0c046e9873a1e2L6",
                    "lines": [
                      {
                        "line": "var cookieSession = require('cookie-session');",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "express()",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "connect()",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "  .use(cookieParser())",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "  .use(cookieSession({ secret: 'testsecret' }))",
                        "lineNumber": 7,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/staticdeploy/staticdeploy/commit/177e64efa883d980ce1c18ad6697364c6aa8d3d9?diff=split#diff-480a70fa6d6756e3b9c0050c38031b56L34",
                    "lines": [
                      {
                        "line": "} = options;",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "return express().use([",
                        "lineNumber": 33,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    bunyanMiddleware({",
                        "lineNumber": 34,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        logger: logger,",
                        "lineNumber": 35,
                        "lineChange": "removed"
                      },
                      {
                        "line": "return express()",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "    .disable(\"x-powered-by\")",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "    .use([",
                        "lineNumber": 35,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Test without express",
                  "/server tests ()",
                  "Added CSRF support"
                ],
                "precision": "very-high",
                "repoDatasetSize": 650,
                "cwe": [
                  "CWE-352"
                ]
              }
            },
            {
              "id": "javascript/TooPermissiveCorsHeader",
              "name": "TooPermissiveCorsHeader",
              "shortDescription": {
                "text": "Origin Validation Error"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nAs a legacy of early web design and site limitations, most web applications default, for security reasons, to a \"same origin policy\". This means that browsers can only retrieve data from another site if the two sites share the same domain. In today's complex online environment, however, sites and applications often need to retrieve data from other domains. This is done under fairly limited conditions through an exception to the same origin policy known as \"cross-origin resource sharing\".\n\nDevelopers may create definitions of trusted domains that are broader than absolutely necessary, inadvertently opening up wider access than intended. This weakness could result in data exposure or loss, or even allow an attacker to take over the site or application.\n\n### Best practices for prevention\n* Avoid using wildcards for cross-origin resource sharing. Instead, define intended domains explicitly.\n* Ensure that your site or app is well defended against cross-site scripting attacks (XSS), which could lead to takeover via an overly permissive cross-domain policy.\n* Do not mix secure and insecure protocols when defining cross-domain policies.\n* Consider defining a clear approved list to specify which domains will be given resource-level access; use this approved list to validate all domain access requests.\n* Clearly define which methods (view, read, and update) are permitted for each resource and domain to avoid abuse.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "upgrade",
                  "CORS",
                  "server"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/fus-marcom/resource-center/commit/f4035de99216e3c4d587a53e5f728316acab1f22?diff=split#diff-78c12f5adc1848d13b1c6f07055d996eL35",
                    "lines": [
                      {
                        "line": "})",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "res.header('Access-Control-Allow-Origin', '*')",
                        "lineNumber": 34,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.header('Access-Control-Allow-Origin', CORS)",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "res.header(",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "  'Access-Control-Allow-Headers',",
                        "lineNumber": 37,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/transloadit/uppy-server/commit/65cb0418752c2541e0bad22de617e9531b85a719?diff=split#diff-e6a5b42b2f7a26c840607370aed5301aL35",
                    "lines": [
                      {
                        "line": "//   `${protocol}://${process.env.UPPY_ENDPOINT}`",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "// )",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "res.setHeader(",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "  'Access-Control-Allow-Origin',",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "  '*'",
                        "lineNumber": 36,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  'http://localhost:3452'",
                        "lineNumber": 36,
                        "lineChange": "added"
                      },
                      {
                        "line": ")",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "res.setHeader(",
                        "lineNumber": 38,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/danwild/wind-js-server/commit/ed1cc47136dd8845ad98542f5bd098f526d19cdf?diff=split#diff-0364f57fbff2fabbe941ed20c328ef1aL36",
                    "lines": [
                      {
                        "line": "// demo",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "//res.setHeader('Access-Control-Allow-Origin', 'http://danwild.github.io');",
                        "lineNumber": 34,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.setHeader('Access-Control-Allow-Origin', '*');",
                        "lineNumber": 35,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.setHeader('Access-Control-Allow-Origin', 'http://danwild.github.io');",
                        "lineNumber": 34,
                        "lineChange": "added"
                      },
                      {
                        "line": "//res.setHeader('Access-Control-Allow-Origin', '*');",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "res.sendFile(fileName, {}, function (err) {",
                        "lineNumber": 37,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Allow setting CORS config",
                  "remove logs, fix content-type header, test echo server"
                ],
                "precision": "very-high",
                "repoDatasetSize": 70,
                "cwe": [
                  "CWE-942",
                  "CWE-346"
                ]
              }
            },
            {
              "id": "javascript/DisablePoweredBy",
              "name": "DisablePoweredBy",
              "shortDescription": {
                "text": "Information Exposure"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nSensitive data includes: personally identifiable information (PII) of employees, customers, users, or other third parties; financial information; code; intellectual property; or protected network information such as passwords. Exposure of sensitive information to an unauthorized actor occurs when any party who does not require this information for business purposes can remove this information from the secure network.\nConsequences of exposure can include holding it for ransom payment, identity theft, or access to other internal network resources-along with financial loss due to regulatory fines, court settlements, or cost to restore compromised systems. As most attackers aim to extract sensitive information, this CWE only describes exploits that take advantage of vulnerabilities related to how data is handled: the management, storage, transfer, or removal of sensitive information.\n\n### Best practices for prevention\n- Encrypt data at all times, whether in transit or at rest.\n- When transporting data, always use a secure protocol such as TLS.\n- Before collecting PII or financial information, consider whether there is a true business need for this information; similarly, before storing the data, ensure that there is an ongoing business need.\n- Classify all incoming data according to privacy and security guidelines to improve awareness of sensitive data.\n- Ensure that caching is disabled for all transactions involving sensitive information.\n- Store passwords with secure, salted hashing functions.\n- Apply a network-wide least-privilege policy so sensitive data is provided only to users with business need to know.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "maintenance",
                  "express",
                  "helmet",
                  "security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/eclipse/orion.client/commit/ad8f3bce33a1ea9d1e2144e6c42f075ad25829d6?diff=split#diff-16594450dc1f06f7d9cf4a47859cfa52L175",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 172,
                        "lineChange": "none"
                      },
                      {
                        "line": "return express()",
                        "lineNumber": 174,
                        "lineChange": "removed"
                      },
                      {
                        "line": "return express.Router()",
                        "lineNumber": 174,
                        "lineChange": "added"
                      },
                      {
                        "line": ".use(bodyParser.json())",
                        "lineNumber": 175,
                        "lineChange": "none"
                      },
                      {
                        "line": ".use(resource(workspaceRoot, {",
                        "lineNumber": 176,
                        "lineChange": "removed"
                      },
                      {
                        "line": ".use(apiPath(root))",
                        "lineNumber": 176,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/flowgrammable/flowsim/commit/1681245625230c6d71e1e74b0ada6551cbf2d935?diff=split#diff-4cb60403ef79ea471c0c046e9873a1e2L6",
                    "lines": [
                      {
                        "line": "var cookieSession = require('cookie-session');",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "express()",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "connect()",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "  .use(cookieParser())",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "  .use(cookieSession({ secret: 'testsecret' }))",
                        "lineNumber": 7,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/ajmueller/express-auth-session/commit/74209d7901e8b3cf4cf0e6f532d03f8e54e97381?diff=split#diff-0364f57fbff2fabbe941ed20c328ef1aL22",
                    "lines": [
                      {
                        "line": "var authentication = require('./authentication');",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "var app = express();",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(sslRedirect());",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(helmet());",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "mongoose.connect(config.db.uri);",
                        "lineNumber": 27,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Test without express",
                  "secure the api with helmet",
                  "Fix some security vulnerabilities, refactor the error constants a little"
                ],
                "precision": "very-high",
                "repoDatasetSize": 835,
                "cwe": [
                  "CWE-200"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "javascript/ServerLeak",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "An error object flows to end and is leaked to the attacker. This may disclose important information about the application to an attacker.",
            "markdown": "{0} {1} to {2} and is leaked to the attacker. This may disclose important information about the application to an attacker.",
            "arguments": [
              "[An error object](0)",
              "[flows](1),(2),(3),(4)",
              "[end](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "be/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 24,
                  "startColumn": 7,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2bad9701bee9828fd40b540338c07ec7991fec5f51f4dd219c979504597bf00b",
            "1": "bc441d81.4773f344.7903730b.e052b9a9.79a7d027.756a1932.cd61fc56.e6930396.1a8eef32.4773f344.7903730b.c559ebce.79a7d027.5fce695c.83265159.e6930396"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "be/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "be/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 12,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "be/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "be/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "be/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 9,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "be/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 7,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 560,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/UseCsurfForExpress",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Consider using csurf middleware for your Express app to protect against CSRF attacks.",
            "markdown": "Consider using csurf middleware for your {0} to protect against CSRF attacks.",
            "arguments": [
              "[Express app](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "be/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 7,
                  "endLine": 7,
                  "startColumn": 13,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b187114e9d97d81fa0f866e22966f5050d8abbd8a3d98f4837fceca7f94af44d",
            "1": "ae77ea27.4773f344.8b18f948.d7919eeb.a1fb1152.5fce695c.ea4b1c47.89d75565.2e852b7e.4773f344.44eded10.c559ebce.a1fb1152.5fce695c.60d372c8.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "be/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 7,
                            "endLine": 7,
                            "startColumn": 13,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 560,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/TooPermissiveCorsHeader",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "Setting header header to \"*\" in header might be too permissive. This allows malicious code on other domains to communicate with the application, which is a security risk",
            "markdown": "Setting {0} to {1} in {2} might be too permissive. This allows malicious code on other domains to communicate with the application, which is a security risk",
            "arguments": [
              "[header header](0)",
              "[\"*\"](1)",
              "[header](2)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "be/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 11,
                  "startColumn": 3,
                  "endColumn": 12
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8e0fbe6be3e3d8b3a8c85db1abfc03eb0a1ef00afc16d24230668023265f0d78",
            "1": "fae39a93.4773f344.d2250c2f.c3ede95a.abd1f8d3.465c0266.83265159.dde78d54.fae39a93.a17c4800.d2250c2f.c3ede95a.abd1f8d3.b9c617ac.83265159.dde78d54"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "be/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 3,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "be/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 3,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "be/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 3,
                            "endColumn": 12
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 560,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        },
        {
          "ruleId": "javascript/DisablePoweredBy",
          "ruleIndex": 4,
          "level": "warning",
          "message": {
            "text": "Disable X-Powered-By header for your Express app (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.",
            "markdown": "Disable X-Powered-By header for your {0} (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.",
            "arguments": [
              "[Express app](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "be/index.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 7,
                  "endLine": 7,
                  "startColumn": 13,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "438b339d7b289670e805e9c45182b033a344bdb1cb08ff258c9e83860b8dde6c",
            "1": "ae77ea27.4773f344.8b18f948.d7919eeb.a1fb1152.5fce695c.ea4b1c47.89d75565.2e852b7e.4773f344.44eded10.c559ebce.a1fb1152.5fce695c.60d372c8.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "be/index.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 7,
                            "endLine": 7,
                            "startColumn": 13,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 560,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ]
          }
        }
      ],
      "properties": {
        "coverage": [
          {
            "files": 21,
            "isSupported": true,
            "lang": "JavaScript"
          },
          {
            "files": 2,
            "isSupported": true,
            "lang": "HTML"
          }
        ]
      }
    }
  ]
}
